                              - Cross-reference -                      Page    1

################################################################################
#                                                                              #
#      IAR Universal Linker V4.53B/WIN                                         #
#                                                                              #
#           Link time     =  07/Oct/2002  08:53:02                             #
#           Target CPU    =  A90                                               #
#           List file     =  C:\AVR_CC\Functions\Debug\List\F_t1.map           #
#           Output file 1 =  C:\AVR_CC\Functions\Debug\Exe\F_t1.d90            #
#                            Format: debug                                     #
#                            UBROF version 8.0.2                               #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  C:\AVR_CC\Functions\Debug\Obj\FuncPointTable.r90  #
#                            C:\AVR_CC\AVR\lib\cl3s-ec-sf.r90 -o               #
#                            C:\AVR_CC\Functions\Debug\Exe\F_t1.d90 -rt -l     #
#                            C:\AVR_CC\Functions\Debug\List\F_t1.map -xms      #
#                            -p80 -IC:\AVR_CC\AVR\LIB\ -f                      #
#                            C:\AVR_CC\AVR\src\template\cfgm161.xcl            #
#                            (-D_..X_INTVEC_SIZE=54 -D_..X_FLASH_NEND=3FFF     #
#                            -D_..X_FLASH_END=3FFF -D_..X_SRAM_BASE=60         #
#                            -D_..X_SRAM_TEND=FF -D_..X_SRAM_END=45F           #
#                            -D_..X_EEPROM_END=1FF) -D_..X_HEAP_SIZE=10        #
#                            -D_..X_CSTACK_SIZE=20 -D_..X_RSTACK_SIZE=20       #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read -f                 #
#                            C:\AVR_CC\AVR\src\template\cfg3s.xcl (-ca90       #
#                            -w29 -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)        #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -Z(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM=_..X_FLASH_BASE-_..X_FLASH_END   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_TEND                                         #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END,_..X_EXT_CSTACK_BASE-_..X_EXT_CSTACK_ #
#                            END                                               #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END,_..X_EXT_SRAM_BASE-_..X_EXT_SRAM_END      #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END,_..X_EXT_RSTACK_BASE-_..X_EXT_RSTACK_ #
#                            END                                               #
#                            -Z(DATA)NEAR_I,NEAR_Z=_..X_SRAM_BASE-_..X_SRAM_EN #
#                            D,_..X_EXT_SRAM_BASE-_..X_EXT_SRAM_END            #
#                            -Z(DATA)NEAR_C=_..X_EXT_ROM_BASE-_..X_EXT_ROM_END #
#                            -Z(DATA)NEAR_N=_..X_EXT_NV_BASE-_..X_EXT_NV_END   #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=1-_..X_EEPROM_END)     #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_EXT_SRAM_BASE=0 -D_..X_EXT_SRAM_END=0      #
#                            -D_..X_EXT_ROM_BASE=0 -D_..X_EXT_ROM_END=0        #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_EXT_NV_END=_..X_SRAM_END                   #
#                            -D_..X_EXT_CSTACK_BASE=_..X_SRAM_BASE             #
#                            -D_..X_EXT_CSTACK_END=_..X_SRAM_BASE              #
#                            -D_..X_EXT_RSTACK_BASE=_..X_SRAM_BASE             #
#                            -D_..X_EXT_RSTACK_END=_..X_SRAM_BASE              #
#                                                                              #
#                        Copyright 1987-2001 IAR Systems. All rights reserved. #
################################################################################

                              - Cross-reference -                      Page    2



                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __64bit_doubles = disabled
  __cpu           = 3
  __cpu_name      = AT90Mega161
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 2.30



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_EXT_RSTACK_END     00000060 
           _..X_EXT_RSTACK_BASE    00000060 
           _..X_EXT_CSTACK_END     00000060 
           _..X_EXT_CSTACK_BASE    00000060 
           _..X_EXT_NV_END         0000045F 
           _..X_EXT_NV_BASE        00000060 
           _..X_EXT_ROM_END        00000000 
           _..X_EXT_ROM_BASE       00000000 
           _..X_EXT_SRAM_END       00000000 
           _..X_EXT_SRAM_BASE      00000000 
           _..X_FLASH_BASE         00000054 
           _..X_RSTACK_SIZE        00000020 
           _..X_CSTACK_SIZE        00000020 
           _..X_HEAP_SIZE          00000010 
           _..X_EEPROM_END         000001FF 
           _..X_SRAM_END           0000045F 
           _..X_SRAM_TEND          000000FF 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00003FFF 
           _..X_FLASH_NEND         00003FFF 
           _..X_INTVEC_SIZE        00000054 
    *************************************************************************

  FILE NAME : C:\AVR_CC\Functions\Debug\Obj\FuncPointTable.r90
  PROGRAM MODULE, NAME : FuncPointTable

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 000000A2 - 000000C1 (20 bytes), align: 0
  Segment part 3.             Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           RxBuf_UART0             000000A2 
    -------------------------------------------------------------------------
                              - Cross-reference -                      Page    3

NEAR_I
  Relative segment, address: DATA 000000A0 - 000000A0 (1 bytes), align: 0
  Segment part 5.             Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           x                       000000A0 
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 000000A1 - 000000A1 (1 bytes), align: 0
  Segment part 8.             Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           y                       000000A1 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000060 - 00000079 (1a bytes), align: 1
  Segment part 10.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           swap                    00000060 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000007A - 0000009D (24 bytes), align: 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0000007A        ?cstartup_call_main (?C_STARTUP)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000054 - 00000059 (6 bytes), align: 0
  Segment part 4.             Intra module refs:   RxBuf_UART0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   00000054 
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000012A - 0000012A (1 bytes), align: 0
  Segment part 6.             Intra module refs:   x
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 0000005A - 0000005F (6 bytes), align: 0
  Segment part 7.             Intra module refs:   x
                                                   y
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   0000005A 
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0000012B - 0000012B (1 bytes), align: 0
  Segment part 9.             Intra module refs:   y

    *************************************************************************

  FILE NAME : C:\AVR_CC\AVR\lib\cl3s-ec-sf.r90
  PROGRAM MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (4 bytes), align: 1
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000009E, align: 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              0000009E        Segment part 0 (?RESET)
           __RESTART               0000009E 
                              - Cross-reference -                      Page    4

    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000009E - 000000AD (10 bytes), align: 1
  Segment part 4.             Intra module refs:   ?C_STARTUP
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000AE - 000000B1 (4 bytes), align: 1
  Segment part 6.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    000000AE 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000B2 - 000000B9 (8 bytes), align: 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      000000B2        ?<Segment init: NEAR_I> (FuncPointTable)
                                                   ?<Segment init: NEAR_Z> (FuncPointTable)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000BA - 000000C9 (10 bytes), align: 1
  Segment part 8.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     000000BA 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000000CA - 000000CB (2 bytes), align: 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE4_L09          000000CA        main (FuncPointTable)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000CC - 000000CD (2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?PROLOGUE4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE3_L09          000000CC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000CE - 000000CF (2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?PROLOGUE3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          000000CE 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000D0 - 000000D1 (2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          000000D0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000D2 - 000000D3 (2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000000D4 - 000000D7 (4 bytes), align: 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        000000D4        ?call_low_level_init (?C_STARTUP)
               non_banked function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

                              - Cross-reference -                      Page    5

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000000D8 - 000000E3 (c bytes), align: 1
  Segment part 8.             Intra module refs:   __segment_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __memclr                000000D8 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000E4 - 000000EF (c bytes), align: 1
  Segment part 9.             Intra module refs:   __segment_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __flashcpy              000000E4 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000000F0 - 00000123 (34 bytes), align: 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          000000F0        ?need_segment_init (?C_STARTUP)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000060, align: 0
  Segment part 3.             Intra module refs:   __segment_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment part INITTAB>
                                   00000060 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000124 - 00000129 (6 bytes), align: 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  00000126 
           ?C_EXIT                 00000126 
           ?C_FUNCALL              00000124 
           _exit                   00000124        ?cstartup_call_main (?C_STARTUP)
           exit                    00000124        ?cstartup_call_main (?C_STARTUP)

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (4 bytes), align: 0
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 00000004 - 00000053 (50 bytes), align: 0
  Segment part 0.



                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE   START ADDRESS    END ADDRESS      SIZE  TYPE  ALIGN
=======              =====   =============    ===========      ====  ====  =====
INTVEC               CODE         00000000 - 00000003             4   com    1
?FILL1               CODE         00000004 - 00000053            50   rel    0
                              - Cross-reference -                      Page    6

SWITCH               CODE              00000054                       dse    0
NEAR_F               CODE              00000054                       dse    0
TINY_F               CODE              00000054                       dse    0
INITTAB              CODE         00000054 - 0000005F             C   rel    0
DIFUNCT              CODE              00000060                       dse    0
CODE                 CODE         00000060 - 00000129            CA   rel    1
TINY_ID              CODE              0000012A                       dse    0
FAR_F                CODE              0000012A                       dse    0
HUGE_F               CODE              0000012A                       dse    0
NEAR_ID              CODE         0000012A - 0000012B             2   rel    0
CHECKSUM             CODE              0000012C                       dse    0
NEAR_C               DATA              00000000                       dse    0
TINY_N               DATA              00000060                       dse    0
TINY_Z               DATA              00000060                       dse    0
TINY_I               DATA              00000060                       dse    0
CSTACK               DATA         00000060 - 0000007F            20   dse    0
HEAP                 DATA              00000080                       dse    0
RSTACK               DATA         00000080 - 0000009F            20   dse    0
NEAR_I               DATA         000000A0 - 000000A1             2   rel    0
NEAR_Z               DATA         000000A2 - 000000C1            20   rel    0
NEAR_N               DATA              000000C2                       dse    0
EEPROM_N             XDATA             00000001                       dse    0
EEPROM_I             XDATA             00000001                       dse    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

  220 bytes of CODE memory (80 range fill)
   98 bytes of DATA memory

Errors: none
Warnings: none

