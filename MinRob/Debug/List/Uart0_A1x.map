                              - Cross-reference -                      Page    1

################################################################################
#                                                                              #
#      IAR Universal Linker V4.53B/WIN                                         #
#                                                                              #
#           Link time     =  01/Oct/2002  12:42:17                             #
#           Target CPU    =  A90                                               #
#           List file     =  C:\AVR_CC\MiniRobot_CODE\Debug\List\Uart0_A1x.map #
#           Output file 1 =  C:\AVR_CC\MiniRobot_CODE\Debug\Exe\Uart0_A1x.hex  #
#                            Format: intel-standard                            #
#           Command line  =  -C                                                #
#                            C:\AVR_CC\MiniRobot_CODE\Debug\Obj\CheckParity7.r #
#                            90                                                #
#                            -C                                                #
#                            C:\AVR_CC\MiniRobot_CODE\Debug\Obj\CheckParity8.r #
#                            90                                                #
#                            -C C:\AVR_CC\MyLib\Debug\Obj\getchar.r90 -C       #
#                            C:\AVR_CC\MyLib\Debug\Obj\gets.r90 -C             #
#                            C:\AVR_CC\MyLib\Debug\Obj\Putchar.r90 -C          #
#                            C:\AVR_CC\MiniRobot_CODE\Debug\Obj\uart0_A1x.r90  #
#                            -C C:\AVR_CC\AVR\lib\cl3s-ec-sf.r90 -o            #
#                            C:\AVR_CC\MiniRobot_CODE\Debug\Exe\Uart0_A1x.hex  #
#                            -Fintel-standard -B -z -G -l                      #
#                            C:\AVR_CC\MiniRobot_CODE\Debug\List\Uart0_A1x.map #
#                            -xms -p80 -IC:\AVR_CC\AVR\LIB\ -f                 #
#                            C:\AVR_CC\AVR\src\template\cfgm161.xcl            #
#                            (-D_..X_INTVEC_SIZE=54 -D_..X_FLASH_NEND=3FFF     #
#                            -D_..X_FLASH_END=3FFF -D_..X_SRAM_BASE=60         #
#                            -D_..X_SRAM_TEND=FF -D_..X_SRAM_END=45F           #
#                            -D_..X_EEPROM_END=1FF) -w -D_..X_HEAP_SIZE=10     #
#                            -D_..X_CSTACK_SIZE=50 -D_..X_RSTACK_SIZE=40       #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read -f                 #
#                            C:\AVR_CC\AVR\src\template\cfg3s.xcl (-ca90       #
#                            -w29 -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)        #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -Z(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM=_..X_FLASH_BASE-_..X_FLASH_END   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_TEND                                         #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END,_..X_EXT_CSTACK_BASE-_..X_EXT_CSTACK_ #
#                            END                                               #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END,_..X_EXT_SRAM_BASE-_..X_EXT_SRAM_END      #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END,_..X_EXT_RSTACK_BASE-_..X_EXT_RSTACK_ #
#                            END                                               #
#                            -Z(DATA)NEAR_I,NEAR_Z=_..X_SRAM_BASE-_..X_SRAM_EN #
#                            D,_..X_EXT_SRAM_BASE-_..X_EXT_SRAM_END            #
#                            -Z(DATA)NEAR_C=_..X_EXT_ROM_BASE-_..X_EXT_ROM_END #
#                            -Z(DATA)NEAR_N=_..X_EXT_NV_BASE-_..X_EXT_NV_END   #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=1-_..X_EEPROM_END)     #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_EXT_SRAM_BASE=0 -D_..X_EXT_SRAM_END=0      #
#                            -D_..X_EXT_ROM_BASE=0 -D_..X_EXT_ROM_END=0        #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_EXT_NV_END=_..X_SRAM_END                   #
#                            -D_..X_EXT_CSTACK_BASE=_..X_SRAM_BASE             #
#                            -D_..X_EXT_CSTACK_END=_..X_SRAM_BASE              #
#                            -D_..X_EXT_RSTACK_BASE=_..X_SRAM_BASE             #
#                            -D_..X_EXT_RSTACK_END=_..X_SRAM_BASE              #
#                                                                              #
#                        Copyright 1987-2001 IAR Systems. All rights reserved. #
################################################################################

                              - Cross-reference -                      Page    2



                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_EXT_RSTACK_END     00000060 
           _..X_EXT_RSTACK_BASE    00000060 
           _..X_EXT_CSTACK_END     00000060 
           _..X_EXT_CSTACK_BASE    00000060 
           _..X_EXT_NV_END         0000045F 
           _..X_EXT_NV_BASE        00000060 
           _..X_EXT_ROM_END        00000000 
           _..X_EXT_ROM_BASE       00000000 
           _..X_EXT_SRAM_END       00000000 
           _..X_EXT_SRAM_BASE      00000000 
           _..X_FLASH_BASE         00000054 
           _..X_RSTACK_SIZE        00000040 
           _..X_CSTACK_SIZE        00000050 
           _..X_HEAP_SIZE          00000010 
           _..X_EEPROM_END         000001FF 
           _..X_SRAM_END           0000045F 
           _..X_SRAM_TEND          000000FF 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00003FFF 
           _..X_FLASH_NEND         00003FFF 
           _..X_INTVEC_SIZE        00000054 
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
?FILL1
  Relative segment, address: CODE 00000000 - 00000053 (54 bytes), align: 0
  Segment part 0.



                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE   START ADDRESS    END ADDRESS      SIZE  TYPE  ALIGN
=======              =====   =============    ===========      ====  ====  =====
?FILL1               CODE         00000000 - 00000053            54   rel    0
INTVEC               CODE              00000000                       dse    0
SWITCH               CODE              00000054                       dse    0
INITTAB              CODE              00000054                       dse    0
DIFUNCT              CODE              00000054                       dse    0
NEAR_F               CODE              00000054                       dse    0
FAR_F                CODE              00000054                       dse    0
TINY_F               CODE              00000054                       dse    0
CODE                 CODE              00000054                       dse    0
                              - Cross-reference -                      Page    3

TINY_ID              CODE              00000054                       dse    0
NEAR_ID              CODE              00000054                       dse    0
CHECKSUM             CODE              00000054                       dse    0
HUGE_F               CODE              00000054                       dse    0
NEAR_C               DATA              00000000                       dse    0
TINY_N               DATA              00000060                       dse    0
TINY_Z               DATA              00000060                       dse    0
TINY_I               DATA              00000060                       dse    0
NEAR_I               DATA              00000060                       dse    0
NEAR_Z               DATA              00000060                       dse    0
NEAR_N               DATA              00000060                       dse    0
HEAP                 DATA              00000060                       dse    0
RSTACK               DATA              00000060                       dse    0
CSTACK               DATA              00000060                       dse    0
EEPROM_N             XDATA             00000001                       dse    0
EEPROM_I             XDATA             00000001                       dse    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

    0 bytes of CODE memory (84 range fill)

Errors: none
Warnings: none

